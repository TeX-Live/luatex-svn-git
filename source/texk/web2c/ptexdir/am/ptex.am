## texk/web2c/ptexdir/am/ptex.am: Makefile fragment for pTeX.
##
## Copyright 2015-2021 Karl Berry <tex-live@tug.org>
## Copyright 2010-2015 Peter Breitenlohner <tex-live@tug.org>
## You may freely use, modify and/or distribute this file.

ptex_cppflags = $(PTEXENC_INCLUDES) $(AM_CPPFLAGS) $(ZLIB_INCLUDES)
ptex_ldadd = libkanji.a $(pproglib) $(PTEXENC_LIBS) $(LDADD) $(ZLIB_LIBS)
ptex_dependencies = libkanji.a $(pproglib) $(PTEXENC_DEPEND) $(ZLIB_DEPEND) $(default_dependencies)
p_tangle = $(tangle_silent)WEBINPUTS=.:$(srcdir)/ptexdir:$(srcdir) $(buildenv) $(TANGLE)

pweb_programs = pbibtex pdvitype ppltotf ptftopl

## pTeX library
##
pproglib = lib/libp.a
# Rebuild $(pproglib)
$(pproglib): $(KPATHSEA_DEPEND) ${srcdir}/lib/*.c
	cd lib && $(MAKE) $(AM_MAKEFLAGS) libp.a

## libkanji.a for pTeX and e-pTeX
##
EXTRA_LIBRARIES += libkanji.a
libkanji_a_SOURCES = ptexdir/kanji.c ptexdir/kanji.h ptexdir/kanji_dump.c
libkanji_a_CPPFLAGS = $(ptex_cppflags)

## pTeX
##
if PTEX
bin_PROGRAMS += ptex
endif PTEX
if PWEB
bin_PROGRAMS += $(pweb_programs)
endif PWEB
EXTRA_PROGRAMS += ptex $(pweb_programs)

ptex_CPPFLAGS = $(ptex_cppflags)

# With --enable-ipc, pTeX may need to link with -lsocket.
ptex_LDADD = $(ptex_ldadd) $(ipc_socketlibs)
ptex_DEPENDENCIES = $(ptex_dependencies)

# pTeX C sources
ptex_c_h = ptexini.c ptex0.c ptexcoerce.h ptexd.h
nodist_ptex_SOURCES = $(ptex_c_h) ptex-pool.c
dist_ptex_SOURCES = ptexdir/ptexextra.c ptexdir/ptexextra.h ptexdir/ptex_version.h

# We must create ptexd.h and ptexdir/ptex_version.h before building the ptex_OBJECTS.
ptex_prereq = ptexd.h ptexdir/ptex_version.h
$(ptex_OBJECTS): $(ptex_prereq)

$(ptex_c_h): ptex-web2c
	@$(web2c) ptex
ptex-web2c: ptex.p $(web2c_texmf) ptexdir/ptex.defines
	@$(web2c) ptex

ptex-pool.c: ptex.pool ptexd.h $(makecpool_stamp)
	$(makecpool) ptex >$@ || rm -f $@

# Tangling pTeX
ptex.p ptex.pool: ptex-tangle
	@$(texmf_tangle) ptex ptex
ptex-tangle: tangle$(EXEEXT) ptex.web ptex.ch tangle-sh
	@$(texmf_tangle) ptex ptex

# Extract ptex version
$(srcdir)/ptexdir/ptex_version.h: @MAINTAINER_MODE_TRUE@ ptexdir/ptex-base.ch
	$(AM_V_GEN)grep '^@d pTeX_version_string==' $(srcdir)/ptexdir/ptex-base.ch \
	  | sed "s/^.*'-/#define PTEX_VERSION \"/;s/'.*$$/\"/" >$@

# Generate ptex.web
ptex.web: tie$(EXEEXT) $(ptex_web_srcs)
	$(tie_m) $(ptex_web_srcs)
ptex_web_srcs = \
	tex.web \
	tex.ch \
	tracingstacklevels.ch \
	zlib-fmt.ch

# Generate ptex.ch
ptex.ch: tie$(EXEEXT) ptex.web $(ptex_ch_srcs)
	$(tie_c) ptex.web $(ptex_ch_srcs)
ptex_ch_srcs = \
	ptexdir/ptex-base.ch \
	$(ptex_ch_synctex) \
	tex-binpool.ch

EXTRA_DIST += $(ptex_web_srcs) $(ptex_ch_srcs) ptexdir/ptex.defines

DISTCLEANFILES += $(nodist_ptex_SOURCES) ptex.web ptex.ch ptex-web2c \
	ptex.p ptex.pool ptex-tangle

## pBibTeX
## 
nodist_pbibtex_SOURCES = pbibtex.c pbibtex.h
pbibtex_SOURCES = ptexdir/kanji.h
pbibtex_CPPFLAGS = $(ptex_cppflags)
pbibtex_LDADD  = $(ptex_ldadd)
pbibtex_DEPENDENCIES = $(ptex_dependencies)
pbibtex.c pbibtex.h: pbibtex-web2c
	@$(web2c) pbibtex
pbibtex-web2c: pbibtex.p $(web2c_depend) ptexdir/ptex.defines web2c/cvtbib.sed
	@$(web2c) pbibtex
pbibtex.p: tangle$(EXEEXT) pbibtex.web ptexdir/pbibtex.ch
	$(p_tangle) pbibtex pbibtex
pbibtex.web: tie$(EXEEXT) bibtex.web bibtex.ch
	$(tie_m) bibtex.web bibtex.ch
EXTRA_DIST += ptexdir/pbibtex.ch web2c/cvtbib.sed

## pDVItype
## 
nodist_pdvitype_SOURCES = pdvitype.c pdvitype.h
pdvitype_SOURCES = ptexdir/kanji.h
pdvitype_CPPFLAGS = $(ptex_cppflags) -DHEX_CHAR_CODE
pdvitype_LDADD = $(ptex_ldadd)
pdvitype_DEPENDENCIES = $(ptex_dependencies)
pdvitype.c pdvitype.h: pdvitype-web2c
	@$(web2c) pdvitype
pdvitype-web2c: pdvitype.p $(web2c_depend) ptexdir/ptex.defines
	@$(web2c) pdvitype
pdvitype.p: tangle$(EXEEXT) pdvitype.web ptexdir/pdvitype.ch
	$(p_tangle) pdvitype pdvitype
pdvitype.web: tie$(EXEEXT) dvitype.web dvitype.ch
	$(tie_m) dvitype.web dvitype.ch
EXTRA_DIST += ptexdir/pdvitype.ch

## pPLtoTF
## 
nodist_ppltotf_SOURCES = ppltotf.c ppltotf.h
ppltotf_SOURCES = ptexdir/kanji.h
ppltotf_CPPFLAGS = $(ptex_cppflags) -DPRESERVE_PUTC
ppltotf_LDADD  = $(ptex_ldadd)
ppltotf_DEPENDENCIES = $(ptex_dependencies)
ppltotf.c ppltotf.h: ppltotf-web2c
	@$(web2c) ppltotf
ppltotf-web2c: ppltotf.p $(web2c_depend) ptexdir/ptex.defines
	@$(web2c) ppltotf
ppltotf.p: tangle$(EXEEXT) ppltotf.web ptexdir/ppltotf.ch
	$(p_tangle) ppltotf ppltotf
ppltotf.web: tie$(EXEEXT) pltotf.web pltotf.ch
	$(tie_m) pltotf.web pltotf.ch
EXTRA_DIST += ptexdir/ppltotf.ch

## pTFtoPL
## 
nodist_ptftopl_SOURCES = ptftopl.c ptftopl.h
ptftopl_SOURCES = ptexdir/kanji.h
ptftopl_CPPFLAGS = $(ptex_cppflags)
ptftopl_LDADD  = $(ptex_ldadd)
ptftopl_DEPENDENCIES = $(ptex_dependencies)
ptftopl.c ptftopl.h: ptftopl-web2c
	@$(web2c) ptftopl
ptftopl-web2c: ptftopl.p $(web2c_depend) ptexdir/ptex.defines
	@$(web2c) ptftopl
ptftopl.p: tangle$(EXEEXT) ptftopl.web ptexdir/ptftopl.ch
	$(p_tangle) ptftopl ptftopl
ptftopl.web: tie$(EXEEXT) tftopl.web tftopl.ch
	$(tie_m) tftopl.web tftopl.ch
EXTRA_DIST += ptexdir/ptftopl.ch

## 
EXTRA_DIST += \
	ptexdir/COPYRIGHT \
	ptexdir/COPYRIGHT.jis \
	ptexdir/ChangeLog \
	ptexdir/Changes.txt \
	ptexdir/INSTALL.txt \
	ptexdir/README.txt

# pTeX Tests
#
ptex_tests = ptexdir/ptriptest.test ptexdir/pver.test
ptexdir/ptriptest.log: ptex$(EXEEXT) dvitype$(EXEEXT) pltotf$(EXEEXT) tftopl$(EXEEXT)
ptexdir/pver.log: ptex$(EXEEXT)
pweb_tests = \
	ptexdir/pbibtex.test \
	ptexdir/pdvitype.test \
	ptexdir/ppltotf.test \
	ptexdir/ptftopl.test
pweb_tests += ptexdir/pbibtex-openout-test.pl ptexdir/pbibtex-longline-test.pl
pweb_tests += ptexdir/pbibtex-mem.test ptexdir/nissya.test
pweb_tests += ptexdir/sample.test
pweb_tests += ptexdir/yokotate.test
pweb_tests += ptexdir/skipjfmp.test
ptexdir/pbibtex.log ptexdir/pbibtex-openout-test.log ptexdir/pbibtex-longline-test.log \
	ptexdir/pbibtex-mem.log ptexdir/nissya.log: pbibtex$(EXEEXT)
ptexdir/pdvitype.log ptexdir/sample.log: pdvitype$(EXEEXT)
ptexdir/ppltotf.log: ppltotf$(EXEEXT)
ptexdir/ptftopl.log: ptftopl$(EXEEXT)
ptexdir/yokotate.log: ppltotf$(EXEEXT) ptftopl$(EXEEXT)
ptexdir/skipjfmp.log: ppltotf$(EXEEXT) ptftopl$(EXEEXT)

EXTRA_DIST += $(ptex_tests) $(pweb_tests)
DISTCLEANFILES += $(pweb_programs:=.c) $(pweb_programs:=.h) \
	$(pweb_programs:=.p) $(pweb_programs:=-web2c) $(pweb_programs:=.web)

if PTEX
TESTS += $(ptex_tests)
TRIPTRAP += ptrip.diffs
TRIPTRAP_CLEAN += ptrip-clean
endif PTEX
if PWEB
TESTS += $(pweb_tests)
endif PWEB

## Test data and results
##
## ptexdir/nissya.test
EXTRA_DIST += ptexdir/tests/nissya_bib.aux ptexdir/tests/nissya.bst ptexdir/tests/sample.bib
DISTCLEANFILES += ptests/nissya_bib.*
## ptexdir/pbibtex.test
DISTCLEANFILES += ptests/xexampl.aux ptests/xexampl.bbl ptests/xexampl.blg
## ptexdir/pbibtex-mem.test
EXTRA_DIST += tests/memdata1.bst tests/memdata2.bst tests/memdata3.bst
DISTCLEANFILES += ptests/memtest.bib ptests/memtest?.*
## ptexdir/pdvitype.test
DISTCLEANFILES += ptests/xstory.dvityp ptests/xpagenum.typ
## ptexdir/ppltotf.test
DISTCLEANFILES += ptests/xcmr10.tfm
## ptexdir/ptftopl.test
DISTCLEANFILES += ptests/xcmr10.pl
## ptexdir/sample.test
EXTRA_DIST += ptexdir/tests/goth10.tfm ptexdir/tests/sample.dvi ptexdir/tests/samplea.typ
DISTCLEANFILES += ptests/xsample.typ
## ptexdir/yokotate.test
EXTRA_DIST += ptexdir/tests/min10.pl ptexdir/tests/min10.tfm
EXTRA_DIST += ptexdir/tests/tmin10.pl ptexdir/tests/tmin10.tfm
DISTCLEANFILES += ptests/x*min10.*
## ptexdir/skipjfmp.test
EXTRA_DIST += ptexdir/tests/skipjfmp.pl ptexdir/tests/skipjfmp.tfm
DISTCLEANFILES += ptests/xskipjfmp.*
## ptexdir/ptriptest
EXTRA_DIST += ptexdir/ptrip/ptrip.diffs ptexdir/ptrip/texmf.cnf
ptrip.diffs: ptex$(EXEEXT) dvitype$(EXEEXT) pltotf$(EXEEXT) tftopl$(EXEEXT)
	$(triptrap_diffs) $@
.PHONY: ptrip-clean
ptrip-clean:
	rm -rf ptripdir

DISTCLEANFILES += ptrip.diffs
